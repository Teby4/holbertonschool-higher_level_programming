>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test Case 1: Missing arguments
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

# Test Case 2: Valid input with positive integers
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test Case 3: Valid input with negative and positive integers
>>> matrix_divided([[-1, -2, -3], [4, 5, 6]], -2)
[[0.5, 1.0, 1.5], [-2.0, -2.5, -3.0]]

# Test Case 4: Valid input with larger numbers
>>> matrix_divided([[14, 18], [20, 24]], 2)
[[7.0, 9.0], [10.0, 12.0]]

# Test Case 5: Valid input with decimal numbers
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 0.5)
[[3.0, 5.0], [7.0, 9.0]]

# Test Case 6: Invalid input with a non-numeric matrix
>>> matrix_divided("not a matrix", 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 7: Invalid input with rows of different sizes
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

# Test Case 8: Invalid input with non-numeric divisor
>>> matrix_divided([[1, 2], [3, 4]], "div")
Traceback (most recent call last):
TypeError: div must be a number

# Test Case 9: Invalid input with divisor equal to 0
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero